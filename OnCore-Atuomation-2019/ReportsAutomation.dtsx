<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/4/2024 10:09:45 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="COM-05361"
  DTS:CreatorName="BLUECAT\gendy"
  DTS:DTSID="{174175EC-8075-41C1-AB7E-79C300595473}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5270.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ReportsAutomation"
  DTS:PackageType="5"
  DTS:VersionBuild="48"
  DTS:VersionGUID="{535C2ECF-8364-42AF-BFBD-858CE6971E3E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EA6C7651-1846-4674-B351-B069534A55B3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="config">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Prepare Config Object"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9C1117DC-2F62-4197-B62B-759620B3D010}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Prepare Config Object"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Prepare Config Object\pass to object"
              componentClassID="Microsoft.RecordsetDestination"
              contactInfo="Recordset Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates and populates an in-memory ADO recordset that is available outside of the data flow. Scripts and other package elements can use the recordset. For example, use a recordset to store the names of files that will be loaded into the data warehouse."
              name="pass to object">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the recordset."
                  name="VariableName">User::config</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input]"
                  hasSideEffects="true"
                  name="Recordset Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[id]"
                      cachedDataType="i4"
                      cachedName="id"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[id]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[reportName]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="reportName"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[reportName]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[query]"
                      cachedDataType="nText"
                      cachedName="query"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[query]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[from]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="from"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[from]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[to]"
                      cachedDataType="wstr"
                      cachedLength="100"
                      cachedName="to"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[to]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[subject]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="subject"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[subject]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[body]"
                      cachedDataType="nText"
                      cachedName="body"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[body]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[frequency]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="frequency"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[frequency]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[time]"
                      cachedDataType="i4"
                      cachedName="time"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[time]" />
                    <inputColumn
                      refId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input].Columns[dayOfTheWeek]"
                      cachedDataType="i4"
                      cachedName="dayOfTheWeek"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[dayOfTheWeek]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Prepare Config Object\Query"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Query"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[config].[reports_mail]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select top 10 * from protocols</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Prepare Config Object\Query.Connections[OleDbConnection]"
                  connectionManagerID="{E81AE254-C8F4-4C68-B874-85976E236502}:external"
                  connectionManagerRefId="Project.ConnectionManagers[COM-ONCORE-SQL]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[id]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[id]"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[id]"
                      name="id"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[reportName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[reportName]"
                      length="100"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[reportName]"
                      name="reportName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[query]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[query]"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[query]"
                      name="query"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[from]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[from]"
                      length="100"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[from]"
                      name="from"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[to]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[to]"
                      length="100"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[to]"
                      name="to"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[subject]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[subject]"
                      length="255"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[subject]"
                      name="subject"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[body]"
                      dataType="nText"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[body]"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[body]"
                      name="body"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[frequency]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[frequency]"
                      length="1"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[frequency]"
                      name="frequency"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[time]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[time]"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[time]"
                      name="time"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[dayOfTheWeek]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[dayOfTheWeek]"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].Columns[dayOfTheWeek]"
                      name="dayOfTheWeek"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[id]"
                      dataType="i4"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[reportName]"
                      dataType="wstr"
                      length="100"
                      name="reportName" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[query]"
                      dataType="nText"
                      name="query" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[from]"
                      dataType="wstr"
                      length="100"
                      name="from" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[to]"
                      dataType="wstr"
                      length="100"
                      name="to" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[subject]"
                      dataType="wstr"
                      length="255"
                      name="subject" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[body]"
                      dataType="nText"
                      name="body" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[frequency]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="frequency" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[time]"
                      dataType="i4"
                      name="time" />
                    <externalMetadataColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output].ExternalColumns[dayOfTheWeek]"
                      dataType="i4"
                      name="dayOfTheWeek" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[id]"
                      dataType="i4"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[reportName]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[reportName]"
                      name="reportName" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[query]"
                      dataType="nText"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[query]"
                      name="query" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[from]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[from]"
                      name="from" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[to]"
                      dataType="wstr"
                      length="100"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[to]"
                      name="to" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[subject]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[subject]"
                      name="subject" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[body]"
                      dataType="nText"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[body]"
                      name="body" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[frequency]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[frequency]"
                      name="frequency" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[dayOfTheWeek]"
                      dataType="i4"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[dayOfTheWeek]"
                      name="dayOfTheWeek" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[time]"
                      dataType="i4"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[time]"
                      name="time" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Prepare Config Object.Paths[OLE DB Source Output]"
              endId="Package\Prepare Config Object\pass to object.Inputs[Recordset Destination Input]"
              name="OLE DB Source Output"
              startId="Package\Prepare Config Object\Query.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task 2"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2D621F2B-03B2-4D40-B3BA-1830B969E1C7}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task 2"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_25301ba86bb0479b8ae95d9aaf3e1508"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::config,$Project::ConnectionString,$Project::Login,$Project::PW">
          <ProjectItem
            Name="DbService.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ST_25301ba86bb0479b8ae95d9aaf3e1508
{
    class DbService
    {
        private static string _connectionString
            = "Data Source=COM-ONCORE-SQL;Initial Catalog=OnCoreStaging;Integrated Security=True;";


        public static DataTable ExecuteQuery(string query)
        {
            DataTable result = new DataTable();
            using (SqlConnection conn = new SqlConnection(_connectionString))
            {
                //conn.Open();

                using (SqlDataAdapter sda = new SqlDataAdapter(query, conn))
                {
                    sda.Fill(result);
                }

            }
            return result;

        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_25301ba86bb0479b8ae95d9aaf3e1508")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_25301ba86bb0479b8ae95d9aaf3e1508")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_25301ba86bb0479b8ae95d9aaf3e1508.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{FFA83903-859B-4A08-B49A-D33454ACE24B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_25301ba86bb0479b8ae95d9aaf3e1508</RootNamespace>
    <AssemblyName>ST_25301ba86bb0479b8ae95d9aaf3e1508</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="DbService.cs" />
    <Compile Include="EmailService.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Data.OleDb;
using System.IO;
using System.Text;
#endregion

namespace ST_25301ba86bb0479b8ae95d9aaf3e1508
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            DataTable configDt = getConfigurationTable();
            ProcessConfigurationTable(configDt);


            Dts.TaskResult = (int)ScriptResults.Success;
        }

        private DataTable getConfigurationTable()
        {
            var config = Dts.Variables["config"].Value;

            DataTable configDt = new DataTable();
            if (config != null)
            {
                OleDbDataAdapter adapter = new OleDbDataAdapter();
                //adapter.Fill(queryDt, dataSet);
                adapter.Fill(configDt, config);
            }

            return configDt;
        }
        private void ProcessConfigurationTable(DataTable configDt)
        {
            string connectionString = Dts.Variables["$Project::ConnectionString"].GetSensitiveValue().ToString();
            string login = Dts.Variables["$Project::Login"].GetSensitiveValue().ToString();
            string pw = Dts.Variables["$Project::PW"].GetSensitiveValue().ToString();

            foreach (DataRow row in configDt.Rows)
            {

                var frequency = row["frequency"].ToString();
                var dayOfTheWeek = int.Parse(row["dayOfTheWeek"].ToString());
                var time = row["time"].ToString();

                if (ShouldBeSent(frequency, dayOfTheWeek, time))
                {
                    var query = row["query"].ToString();
                    var queryDt = DbService.ExecuteQuery(query);
                    string csvData = DataTableToCSV(queryDt);
                    MemoryStream memoryStream = ConvertToCsvInMemory(csvData);
                    MailMessage mm = CreateMailMessage(memoryStream, row);
                    SendEmail(mm, connectionString, login, pw);
                }
            }
        }
        private string DataTableToCSV(DataTable dt)
        {
            StringBuilder csvSb = new StringBuilder();
            foreach (var column in dt.Columns)
            {
                csvSb.Append($"{column.ToString()},");
            }

            csvSb.AppendLine();

            foreach (DataRow row in dt.Rows)
            {
                foreach (var value in row.ItemArray)
                {
                    csvSb.Append($"{EscapeCsvValue(value.ToString())},");
                }

                csvSb.AppendLine();
            }

            return csvSb.ToString();
        }
        private string EscapeCsvValue(string value)
        {
            // Normalize new lines and tabs by replacing them with a space
            value = value.Replace("\r", "").Replace("\n", " ").Replace("\t", " ");

            // Escape double quotes by doubling them
            value = value.Replace("\"", "\"\"");

            // If the value contains a comma, or starts or ends with whitespace, or contains double quotes, enclose it in double quotes
            // Checking for modified value which now might include double quotes as part of previous replacements
            if (value.Contains(",") || value.StartsWith(" ") || value.EndsWith(" ") || value.Contains("\""))
            {
                value = "\"" + value + "\"";
            }

            return value;
        }

        private MemoryStream ConvertToCsvInMemory(string csvData)
        {
            byte[] encodedCsv = Encoding.UTF8.GetBytes(csvData);
            return new MemoryStream(encodedCsv);
        }
        private MailMessage CreateMailMessage(MemoryStream memoryStream,
            DataRow row)
        {
            string reportName = $"{row["reportName"].ToString()}.csv";
            string to = row["to"].ToString();
            string from = row["from"].ToString();
            string subject = row["subject"].ToString();
            string body = row["body"].ToString();
            MailMessage mm = new MailMessage();
            mm.From = new MailAddress(from);
            mm.To.Add(to);
            mm.Bcc.Add("gendy@arizona.edu");
            mm.Subject = subject;
            mm.Body = body;
            mm.Attachments.Add(new Attachment(memoryStream, reportName, "text/csv"));
            return mm;
        }
        private bool ShouldBeSent(string frequency, int day, string time)
        {
            /*
              //
        // Summary:
        //     Indicates Sunday.
        Sunday = 0,
        //
        // Summary:
        //     Indicates Monday.
        Monday = 1,
        //
        // Summary:
        //     Indicates Tuesday.
        Tuesday = 2,
        //
        // Summary:
        //     Indicates Wednesday.
        Wednesday = 3,
        //
        // Summary:
        //     Indicates Thursday.
        Thursday = 4,
        //
        // Summary:
        //     Indicates Friday.
        Friday = 5,
        //
        // Summary:
        //     Indicates Saturday.
        Saturday = 6
             */
            DateTime today = DateTime.Now;
            if (frequency == "m" &&
                (int)today.DayOfWeek == day && today.Day <= 7)
            {
                return true;
            }
            else if (frequency == "w" &&
                (int)today.DayOfWeek == day)
            {
                return true;
            }
            else if (frequency == "d")
            {
                return true;
            }
            return false;
        }
        private void SendEmail(MailMessage mm, string connectionString, string login, string pw)
        {

            using (EmailService es = new EmailService(connectionString, login, pw))
            {
                es.send(mm);
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="EmailService.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Mail;
using System.Text;
using System.Threading.Tasks;

namespace ST_25301ba86bb0479b8ae95d9aaf3e1508
{
    internal class EmailService : IDisposable
    {
        //private MailMessage mailMessage;
        private readonly SmtpClient smtpClient;

        public EmailService(string connectionString, string login, string pw)
        {
            //string SMTPClient = ["User::MyVariable"].Value = "New Value";

            

            smtpClient = new SmtpClient(connectionString, 587);
            smtpClient.Credentials = new NetworkCredential(login, pw);
            smtpClient.EnableSsl = true;

        }

        public void Dispose()
        {
            smtpClient.Dispose();
        }

        public void send(MailMessage mailMessage)
        {
            smtpClient.Send(mailMessage);
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_25301ba86bb0479b8ae95d9aaf3e1508</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_25301ba86bb0479b8ae95d9aaf3e1508</msb:DisplayName>
    <msb:ProjectId>{6B9D340F-4847-4F7E-9300-7E8DC5908056}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_25301ba86bb0479b8ae95d9aaf3e1508.csproj" />
    <msb:File Include="EmailService.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="DbService.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_25301ba86bb0479b8ae95d9aaf3e1508.Properties.Settings.get_Default():ST_25301ba86bb0479b8ae95d9aaf3e1508.Properties.Sett" +
    "ings")]

namespace ST_25301ba86bb0479b8ae95d9aaf3e1508.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_25301ba86bb0479b8ae95d9aaf3e1508.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_25301ba86bb0479b8ae95d9aaf3e1508.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_25301ba86bb0479b8ae95d9aaf3e1508.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_25301ba86bb0479b8ae95d9aaf3e1508.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_25301ba86bb0479b8ae95d9aaf3e1508.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_25301ba86bb0479b8ae95d9aaf3e1508.dll">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
0QA4CTEBcQGxCTYB0QCNBDwB0QBPCUIBqQAHBwYAuQGEAUsBuQF8CVQB6QAHB1oBCQEHBwYACAAc
AHQBCAAgAHkBKQBzACoCLgALAAICLgATAAsCLgAbACoCLgAjADMCLgArAFwCLgAzAFwCLgA7AFwC
LgBDADMCLgBLAGICLgBTAFwCLgBbAHkCSQBzACoCgwBjAHkBoQB7AHkBowBrAHkBGwBPAFoAeACr
APkALAFGAQUAAQAGAAMAAAC9BvMBAAD3AfgBAACpCP0BAgASAAMAAgATAAUAAQAUAAUAAgAVAAcA
HQEEgAAAAQAAAL0irmUAAAAAAAAUAAAABAAAAAAAAAAAAAAAYgGwAAAAAAAEAAAAAAAAAAAAAABi
AYoAAAAAAAQAAAAAAAAAAAAAAGIBtAUAAAAADwAAAAAAAAAAAAAAawGbBAAAAAAPAAAAAAAAAAAA
AABrAVQAAAAAAAAAAAABAAAAWAcAAAcABAAAAAAAAENvbGxlY3Rpb25gMQBJbnQzMgBTVF8yNTMw
MWJhODZiYjA0NzliOGFlOTVkOWFhZjNlMTUwOABnZXRfVVRGOAA8TW9kdWxlPgBTeXN0ZW0uSU8A
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAERhdGFUYWJsZVRvQ1NWAHZhbHVlX18AU3lz
dGVtLkRhdGEAY3N2RGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBtc2NvcmxpYgBnZXRfQmNjAEFkZABT
ZW5kAEFwcGVuZABzZW5kAFJlcGxhY2UARGJTZXJ2aWNlAEVtYWlsU2VydmljZQBkZWZhdWx0SW5z
dGFuY2UAQ3JlYXRlTWFpbE1lc3NhZ2UAbWFpbE1lc3NhZ2UARGF0YVRhYmxlAFByb2Nlc3NDb25m
aWd1cmF0aW9uVGFibGUAZ2V0Q29uZmlndXJhdGlvblRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQXBwZW5kTGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJ
bnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3Nl
AFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAR2V0U2Vuc2l0
aXZlVmFsdWUARXNjYXBlQ3N2VmFsdWUAdmFsdWUARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVy
c2lvbmluZwBfY29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBFbmRzV2l0aABTdGFydHNXaXRoAGdl
dF9EYXlPZldlZWsATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbGxl
Y3Rpb25zLk9iamVjdE1vZGVsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABTeXN0ZW0uTmV0Lk1haWwAU2VuZEVtYWlsAFNUXzI1MzAxYmE4NmJiMDQ3OWI4YWU5NWQ5YWFm
M2UxNTA4LmRsbABGaWxsAHNldF9FbmFibGVTc2wATWVtb3J5U3RyZWFtAG1lbW9yeVN0cmVhbQBn
ZXRfSXRlbQBTeXN0ZW0AbW0Ac2V0X0Zyb20ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAGxv
Z2luAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAERhdGFDb2x1bW5Db2xsZWN0aW9uAE1haWxBZGRyZXNzQ29sbGVjdGlvbgBBdHRhY2ht
ZW50Q29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlvbgBTcWxDb25uZWN0aW9uAFN5c3RlbS5EYXRh
LkNvbW1vbgBnZXRfVG8AQ3VsdHVyZUluZm8AU3RyaW5nQnVpbGRlcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAE9sZURiRGF0YUFkYXB0ZXIAU3FsRGF0YUFkYXB0ZXIASUVudW1lcmF0b3IAR2V0RW51bWVy
YXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBp
bGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF8yNTMwMWJhODZiYjA0NzliOGFlOTVkOWFh
ZjNlMTUwOC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1Rf
MjUzMDFiYTg2YmIwNDc5YjhhZTk1ZDlhYWYzZTE1MDguUHJvcGVydGllcwBnZXRfVmFyaWFibGVz
AEdldEJ5dGVzAFNldHRpbmdzAHNldF9DcmVkZW50aWFscwBDb250YWlucwBnZXRfQ29sdW1ucwBT
eXN0ZW0uQ29sbGVjdGlvbnMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMAZ2V0X0F0dGFjaG1lbnRzAGdldF9Sb3dzAGNvbmZpZ0R0AENvbmNhdABPYmplY3QAc2V0X1N1
YmplY3QAZHQAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTaG91bGRCZVNl
bnQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AFNtdHBDbGllbnQAc210cENsaWVudABBdHRhY2htZW50
AGdldF9DdXJyZW50AElDcmVkZW50aWFsc0J5SG9zdABNb3ZlTmV4dABTeXN0ZW0uVGV4dABnZXRf
Tm93AERhdGFSb3cAcm93AHB3AGdldF9EYXkAZGF5AGdldF9JdGVtQXJyYXkAZnJlcXVlbmN5AHNl
dF9Cb2R5AGdldF9Bc3NlbWJseQBFeGVjdXRlUXVlcnkAcXVlcnkAQ29udmVydFRvQ3N2SW5NZW1v
cnkAb3BfRXF1YWxpdHkAAAAAAIClRABhAHQAYQAgAFMAbwB1AHIAYwBlAD0AQwBPAE0ALQBPAE4A
QwBPAFIARQAtAFMAUQBMADsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcAPQBPAG4AQwBv
AHIAZQBTAHQAYQBnAGkAbgBnADsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQA
eQA9AFQAcgB1AGUAOwABDWMAbwBuAGYAaQBnAAA1JABQAHIAbwBqAGUAYwB0ADoAOgBDAG8AbgBu
AGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAfJABQAHIAbwBqAGUAYwB0ADoAOgBMAG8AZwBpAG4A
ABkkAFAAcgBvAGoAZQBjAHQAOgA6AFAAVwAAE2YAcgBlAHEAdQBlAG4AYwB5AAAZZABhAHkATwBm
AFQAaABlAFcAZQBlAGsAAAl0AGkAbQBlAAALcQB1AGUAcgB5AAADLAAAAw0AAAEAAwoAAAMgAAAD
CQAAAyIAAAUiACIAABVyAGUAcABvAHIAdABOAGEAbQBlAAAJLgBjAHMAdgAABXQAbwAACWYAcgBv
AG0AAA9zAHUAYgBqAGUAYwB0AAAJYgBvAGQAeQAAI2cAZQBuAGQAeQBAAGEAcgBpAHoAbwBuAGEA
LgBlAGQAdQAAEXQAZQB4AHQALwBjAHMAdgAAA20AAAN3AAADZAAAcVMAVABfADIANQAzADAAMQBi
AGEAOAA2AGIAYgAwADQANwA5AGIAOABhAGUAOQA1AGQAOQBhAGEAZgAzAGUAMQA1ADAAOAAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAR8qz0amuikmA5hnqxmcR2AAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERfQgHAxI5Ej0SQQYgAgEOEj0FIAEIEjkFIAIBDggFIAIB
Dg4GIAEBEoCVBCABAQIFIAEBEk0EBwESOQUgABKAmQUHAhwSOQUgABKAnQYgARKAoRwDIAAcBiAC
CBI5HBUHDQ4ODhJZEl0OCA4SOQ4SYRJNEkUDIAAOBSAAEoCpBCAAElkEIAEcDgQAAQgOAyAAAg0H
BxJlElkcEkUdHAgcBSAAEoC1BQACDg4OBSABEmUOBCAAEmUEIAAdHAUgAg4ODgQgAQIOBgADDg4O
DgUAABKAvQUgAR0FDgUgAQEdBQcHBQ4ODg4OBiABARKAwQUgABKAxQUgABKAyQggAwESgNEODggV
EoDVARKAzQUgAQETAAQHARFpBAAAEWkFAAICDg4FIAARgNkDIAAIBAcBEgwIAAESgN0RgOEFIAAS
gOUHIAIBDhKA5Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAACBg4DBhJJAwYSdQMGEnkDBhIY
AgYIAwYRHAUAARI5DgMAAAEGIAMBDg4OBCAAEjkFIAEBEjkFIAEOEjkEIAEODgUgARJhDgggAhJN
EmESXQYgAwIOCA4IIAQBEk0ODg4EAAASdQQAABJ5BQABARJ5BAAAEhgECAASdQQIABJ5BAgAEhgI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzI1
MzAxYmE4NmJiMDQ3OWI4YWU5NWQ5YWFmM2UxNTA4AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUSLk5FVCBGcmFtZXdvcmsgNC43ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACwPQAAAAAAAAAAAADKPQAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAvD0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAK5lvSIAAAEArmW9Ij8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMgA1ADMAMAAxAGIAYQA4ADYAYgBiADAANAA3ADkAYgA4AGEAZQA5ADUAZAA5AGEAYQBmADMA
ZQAxADUAMAA4AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADgAOAA5
ADMALgAyADYAMAAzADAAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
MgA1ADMAMAAxAGIAYQA4ADYAYgBiADAANAA3ADkAYgA4AGEAZQA5ADUAZAA5AGEAYQBmADMAZQAx
ADUAMAA4AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwAyADUAMwAwADEAYgBhADgANgBiAGIAMAA0ADcAOQBiADgAYQBlADkANQBkADkAYQBh
AGYAMwBlADEANQAwADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AMgA1ADMAMAAxAGIAYQA4ADYAYgBiADAANAA3ADkAYgA4AGEAZQA5ADUAZAA5AGEAYQBm
ADMAZQAxADUAMAA4AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA4ADgAOQAzAC4AMgA2ADAAMwAwAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA4ADgAOQAzAC4AMgA2ADAAMwAwAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAANw9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{372AE119-37AD-431D-BE5F-BB2853FB45C3}"
      DTS:From="Package\Prepare Config Object"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Task 2" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{256831EE-E58E-4F29-85A6-074085CB2E19}"
      DTS:EventID="16384"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{8E928B7A-4BD4-45FA-9607-8018B8A13105}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="188,42"
          Id="Package\Prepare Config Object"
          TopLeft="204,127" />
        <NodeLayout
          Size="143,42"
          Id="Package\Script Task 2"
          TopLeft="224,274" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="296.75,169">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,105"
              Start="0,0"
              End="0,97.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,97.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="155,42"
          Id="{0FE0C7A6-498A-47C4-9DAE-135859598547}"
          TopLeft="377,92" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\Prepare Config Object">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="147,42"
          Id="Package\Prepare Config Object\pass to object"
          TopLeft="102,181" />
        <NodeLayout
          Size="109,42"
          Id="Package\Prepare Config Object\Query"
          TopLeft="117,86" />
        <EdgeLayout
          Id="Package\Prepare Config Object.Paths[OLE DB Source Output]"
          TopLeft="173.5,128">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Prepare Config Object\Query">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>